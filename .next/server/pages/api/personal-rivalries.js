"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/personal-rivalries";
exports.ids = ["pages/api/personal-rivalries"];
exports.modules = {

/***/ "@next-auth/prisma-adapter":
/*!********************************************!*\
  !*** external "@next-auth/prisma-adapter" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/prisma-adapter");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/providers/github":
/*!*********************************************!*\
  !*** external "next-auth/providers/github" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/github");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpersonal-rivalries&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fpersonal-rivalries%2Findex.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpersonal-rivalries&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fpersonal-rivalries%2Findex.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_personal_rivalries_index_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/personal-rivalries/index.ts */ \"(api)/./pages/api/personal-rivalries/index.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_personal_rivalries_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_personal_rivalries_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/personal-rivalries\",\n        pathname: \"/api/personal-rivalries\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_personal_rivalries_index_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnBlcnNvbmFsLXJpdmFscmllcyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGcGVyc29uYWwtcml2YWxyaWVzJTJGaW5kZXgudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDb0U7QUFDcEU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLG1FQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxtRUFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mb290cmF0ZS8/ZTZiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL3BlcnNvbmFsLXJpdmFscmllcy9pbmRleC50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3BlcnNvbmFsLXJpdmFscmllc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3BlcnNvbmFsLXJpdmFscmllc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpersonal-rivalries&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fpersonal-rivalries%2Findex.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @next-auth/prisma-adapter */ \"@next-auth/prisma-adapter\");\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/github */ \"next-auth/providers/github\");\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n\n\n\n\n\nconst authOptions = {\n    adapter: (0,_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__.PrismaAdapter)(_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma),\n    providers: [\n        next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.GITHUB_ID,\n            clientSecret: process.env.GITHUB_SECRET\n        }),\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default()({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Mot de passe\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const user = await _prisma__WEBPACK_IMPORTED_MODULE_4__.prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user || !user.password) {\n                    return null;\n                }\n                const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_3___default().compare(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.name,\n                    username: user.username\n                };\n            }\n        })\n    ],\n    callbacks: {\n        session: async ({ session, token })=>{\n            if (session?.user) {\n                session.user.id = token.sub;\n            }\n            return session;\n        },\n        jwt: async ({ user, token })=>{\n            if (user) {\n                token.uid = user.id;\n            }\n            return token;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    pages: {\n        signIn: \"/auth/signin\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ3lEO0FBQ0Y7QUFDVTtBQUNwQztBQUNJO0FBRTFCLE1BQU1LLGNBQStCO0lBQzFDQyxTQUFTTix3RUFBYUEsQ0FBQ0ksMkNBQU1BO0lBQzdCRyxXQUFXO1FBQ1ROLGlFQUFjQSxDQUFDO1lBQ2JPLFVBQVVDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztZQUMvQkMsY0FBY0gsUUFBUUMsR0FBRyxDQUFDRyxhQUFhO1FBQ3pDO1FBQ0FYLHNFQUFtQkEsQ0FBQztZQUNsQlksTUFBTTtZQUNOQyxhQUFhO2dCQUNYQyxPQUFPO29CQUFFQyxPQUFPO29CQUFTQyxNQUFNO2dCQUFRO2dCQUN2Q0MsVUFBVTtvQkFBRUYsT0FBTztvQkFBZ0JDLE1BQU07Z0JBQVc7WUFDdEQ7WUFDQSxNQUFNRSxXQUFVTCxXQUFXO2dCQUN6QixJQUFJLENBQUNBLGFBQWFDLFNBQVMsQ0FBQ0QsYUFBYUksVUFBVTtvQkFDakQsT0FBTztnQkFDVDtnQkFFQSxNQUFNRSxPQUFPLE1BQU1qQiwyQ0FBTUEsQ0FBQ2lCLElBQUksQ0FBQ0MsVUFBVSxDQUFDO29CQUN4Q0MsT0FBTzt3QkFDTFAsT0FBT0QsWUFBWUMsS0FBSztvQkFDMUI7Z0JBQ0Y7Z0JBRUEsSUFBSSxDQUFDSyxRQUFRLENBQUNBLEtBQUtGLFFBQVEsRUFBRTtvQkFDM0IsT0FBTztnQkFDVDtnQkFFQSxNQUFNSyxrQkFBa0IsTUFBTXJCLHVEQUFjLENBQzFDWSxZQUFZSSxRQUFRLEVBQ3BCRSxLQUFLRixRQUFRO2dCQUdmLElBQUksQ0FBQ0ssaUJBQWlCO29CQUNwQixPQUFPO2dCQUNUO2dCQUVBLE9BQU87b0JBQ0xFLElBQUlMLEtBQUtLLEVBQUU7b0JBQ1hWLE9BQU9LLEtBQUtMLEtBQUs7b0JBQ2pCRixNQUFNTyxLQUFLUCxJQUFJO29CQUNmYSxVQUFVTixLQUFLTSxRQUFRO2dCQUN6QjtZQUNGO1FBQ0Y7S0FDRDtJQUNEQyxXQUFXO1FBQ1RDLFNBQVMsT0FBTyxFQUFFQSxPQUFPLEVBQUVDLEtBQUssRUFBRTtZQUNoQyxJQUFJRCxTQUFTUixNQUFNO2dCQUNqQlEsUUFBUVIsSUFBSSxDQUFDSyxFQUFFLEdBQUdJLE1BQU1DLEdBQUc7WUFDN0I7WUFDQSxPQUFPRjtRQUNUO1FBQ0FHLEtBQUssT0FBTyxFQUFFWCxJQUFJLEVBQUVTLEtBQUssRUFBRTtZQUN6QixJQUFJVCxNQUFNO2dCQUNSUyxNQUFNRyxHQUFHLEdBQUdaLEtBQUtLLEVBQUU7WUFDckI7WUFDQSxPQUFPSTtRQUNUO0lBQ0Y7SUFDQUQsU0FBUztRQUNQSyxVQUFVO0lBQ1o7SUFDQUMsT0FBTztRQUNMQyxRQUFRO0lBQ1Y7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvLi9saWIvYXV0aC50cz9iZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBdXRoT3B0aW9ucyB9IGZyb20gXCJuZXh0LWF1dGhcIlxuaW1wb3J0IHsgUHJpc21hQWRhcHRlciB9IGZyb20gXCJAbmV4dC1hdXRoL3ByaXNtYS1hZGFwdGVyXCJcbmltcG9ydCBHaXRodWJQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9naXRodWJcIlxuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIlxuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIlxuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIi4vcHJpc21hXCJcblxuZXhwb3J0IGNvbnN0IGF1dGhPcHRpb25zOiBOZXh0QXV0aE9wdGlvbnMgPSB7XG4gIGFkYXB0ZXI6IFByaXNtYUFkYXB0ZXIocHJpc21hKSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgR2l0aHViUHJvdmlkZXIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkdJVEhVQl9JRCEsXG4gICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdJVEhVQl9TRUNSRVQhLFxuICAgIH0pLFxuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6IFwiRW1haWxcIiwgdHlwZTogXCJlbWFpbFwiIH0sXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIk1vdCBkZSBwYXNzZVwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgZW1haWw6IGNyZWRlbnRpYWxzLmVtYWlsXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmICghdXNlciB8fCAhdXNlci5wYXNzd29yZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpc1Bhc3N3b3JkVmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShcbiAgICAgICAgICBjcmVkZW50aWFscy5wYXNzd29yZCxcbiAgICAgICAgICB1c2VyLnBhc3N3b3JkXG4gICAgICAgIClcblxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiB1c2VyLmlkLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSxcbiAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIHNlc3Npb246IGFzeW5jICh7IHNlc3Npb24sIHRva2VuIH0pID0+IHtcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIHNlc3Npb24udXNlci5pZCA9IHRva2VuLnN1YiFcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uXG4gICAgfSxcbiAgICBqd3Q6IGFzeW5jICh7IHVzZXIsIHRva2VuIH0pID0+IHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLnVpZCA9IHVzZXIuaWRcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlblxuICAgIH0sXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gIH0sXG4gIHBhZ2VzOiB7XG4gICAgc2lnbkluOiAnL2F1dGgvc2lnbmluJyxcbiAgfSxcbn1cbiJdLCJuYW1lcyI6WyJQcmlzbWFBZGFwdGVyIiwiR2l0aHViUHJvdmlkZXIiLCJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiYmNyeXB0IiwicHJpc21hIiwiYXV0aE9wdGlvbnMiLCJhZGFwdGVyIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiR0lUSFVCX0lEIiwiY2xpZW50U2VjcmV0IiwiR0lUSFVCX1NFQ1JFVCIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaXNQYXNzd29yZFZhbGlkIiwiY29tcGFyZSIsImlkIiwidXNlcm5hbWUiLCJjYWxsYmFja3MiLCJzZXNzaW9uIiwidG9rZW4iLCJzdWIiLCJqd3QiLCJ1aWQiLCJzdHJhdGVneSIsInBhZ2VzIiwic2lnbkluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/auth.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXlCLEVBQWNILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./pages/api/auth/[...nextauth].ts":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/auth */ \"(api)/./lib/auth.ts\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()(_lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0M7QUFDZTtBQUUvQyxpRUFBZUEsZ0RBQVFBLENBQUNDLGtEQUFXQSxDQUFDQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvLi9wYWdlcy9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdLnRzPzJlOGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5leHRBdXRoIGZyb20gJ25leHQtYXV0aCdcbmltcG9ydCB7IGF1dGhPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vbGliL2F1dGgnXG5cbmV4cG9ydCBkZWZhdWx0IE5leHRBdXRoKGF1dGhPcHRpb25zKVxuIl0sIm5hbWVzIjpbIk5leHRBdXRoIiwiYXV0aE9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...nextauth].ts\n");

/***/ }),

/***/ "(api)/./pages/api/personal-rivalries/index.ts":
/*!***********************************************!*\
  !*** ./pages/api/personal-rivalries/index.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _auth_nextauth___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auth/[...nextauth] */ \"(api)/./pages/api/auth/[...nextauth].ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/prisma */ \"(api)/./lib/prisma.ts\");\n// pages/api/personal-rivalries/index.ts - VERSION COMPLÈTE FONCTIONNELLE\n\n\n\n// Import des fonctions de notification pour les rivalités\nasync function createNotification(data) {\n    try {\n        return await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.notification.create({\n            data: {\n                userId: data.userId,\n                type: data.type,\n                title: data.title,\n                message: data.message,\n                data: data.data ? JSON.stringify(data.data) : null,\n                read: false\n            }\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur cr\\xe9ation notification:\", error);\n        return null;\n    }\n}\nasync function notifyRivalryRequest(senderId, receiverId, senderName, sport, rivalryId) {\n    const sportEmojis = {\n        \"tennis\": \"\\uD83C\\uDFBE\",\n        \"football\": \"⚽\",\n        \"basketball\": \"\\uD83C\\uDFC0\",\n        \"pingpong\": \"\\uD83C\\uDFD3\",\n        \"badminton\": \"\\uD83C\\uDFF8\",\n        \"running\": \"\\uD83C\\uDFC3\",\n        \"swimming\": \"\\uD83C\\uDFCA\",\n        \"cycling\": \"\\uD83D\\uDEB4\",\n        \"golf\": \"⛳\",\n        \"chess\": \"♟️\",\n        \"boxing\": \"\\uD83E\\uDD4A\",\n        \"mma\": \"\\uD83E\\uDD4B\",\n        \"other\": \"\\uD83C\\uDFC6\"\n    };\n    const emoji = sportEmojis[sport] || \"\\uD83C\\uDFC6\";\n    const sportName = sport.charAt(0).toUpperCase() + sport.slice(1);\n    return createNotification({\n        userId: receiverId,\n        type: \"rivalry_request\",\n        title: \"Nouvelle demande de rivalit\\xe9\",\n        message: `${senderName} vous défie en ${sportName} ${emoji}`,\n        actionUrl: `/personal-matches?tab=requests`,\n        data: {\n            senderId,\n            senderName,\n            sport,\n            rivalryId,\n            emoji\n        }\n    });\n}\nasync function handler(req, res) {\n    console.log(\"\\uD83C\\uDFAF API rivalit\\xe9s appel\\xe9e - m\\xe9thode:\", req.method, \"query:\", req.query);\n    try {\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _auth_nextauth___WEBPACK_IMPORTED_MODULE_1__.authOptions);\n        if (!session) {\n            console.log(\"❌ Pas de session\");\n            return res.status(401).json({\n                message: \"Non autoris\\xe9\"\n            });\n        }\n        // Récupérer l'utilisateur complet depuis la DB\n        const userEmail = session.user?.email;\n        if (!userEmail) {\n            console.log(\"❌ Pas d'email dans la session\");\n            return res.status(401).json({\n                message: \"Email non trouv\\xe9 dans la session\"\n            });\n        }\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findUnique({\n            where: {\n                email: userEmail\n            },\n            select: {\n                id: true,\n                name: true,\n                email: true\n            }\n        });\n        if (!user) {\n            console.log(\"❌ Utilisateur non trouv\\xe9 en DB avec email:\", userEmail);\n            return res.status(401).json({\n                message: \"Utilisateur non trouv\\xe9\"\n            });\n        }\n        const userId = user.id;\n        console.log(\"✅ UserId r\\xe9cup\\xe9r\\xe9:\", userId, \"- Utilisateur:\", user.name);\n        switch(req.method){\n            case \"GET\":\n                const { type } = req.query;\n                console.log(\"\\uD83D\\uDCD6 GET rivalit\\xe9s - type:\", type);\n                if (type === \"requests\") {\n                    // 📥 DEMANDES REÇUES\n                    const receivedRequests = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.personalRivalry.findMany({\n                        where: {\n                            user2Id: userId,\n                            status: \"PENDING\"\n                        },\n                        include: {\n                            user1: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    username: true,\n                                    image: true,\n                                    email: true\n                                }\n                            }\n                        },\n                        orderBy: {\n                            createdAt: \"desc\"\n                        }\n                    });\n                    console.log(`📥 ${receivedRequests.length} demandes reçues trouvées`);\n                    const formattedRequests = receivedRequests.map((rivalry)=>({\n                            id: rivalry.id,\n                            sport: rivalry.sport,\n                            friend: {\n                                id: rivalry.user1.id,\n                                name: rivalry.user1.name,\n                                username: rivalry.user1.username,\n                                image: rivalry.user1.image,\n                                email: rivalry.user1.email\n                            },\n                            message: rivalry.message,\n                            createdAt: rivalry.createdAt.toISOString()\n                        }));\n                    return res.status(200).json({\n                        rivalries: formattedRequests\n                    });\n                } else if (type === \"sent\") {\n                    // 📤 DEMANDES ENVOYÉES\n                    const sentRequests = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.personalRivalry.findMany({\n                        where: {\n                            user1Id: userId,\n                            status: \"PENDING\"\n                        },\n                        include: {\n                            user2: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    username: true,\n                                    image: true,\n                                    email: true\n                                }\n                            }\n                        },\n                        orderBy: {\n                            createdAt: \"desc\"\n                        }\n                    });\n                    console.log(`📤 ${sentRequests.length} demandes envoyées trouvées`);\n                    const formattedSent = sentRequests.map((rivalry)=>({\n                            id: rivalry.id,\n                            sport: rivalry.sport,\n                            friend: {\n                                id: rivalry.user2.id,\n                                name: rivalry.user2.name,\n                                username: rivalry.user2.username,\n                                image: rivalry.user2.image,\n                                email: rivalry.user2.email\n                            },\n                            message: rivalry.message,\n                            createdAt: rivalry.createdAt.toISOString(),\n                            isSent: true\n                        }));\n                    return res.status(200).json({\n                        rivalries: formattedSent\n                    });\n                } else {\n                    // 🏆 RIVALITÉS ACTIVES\n                    const activeRivalries = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.personalRivalry.findMany({\n                        where: {\n                            OR: [\n                                {\n                                    user1Id: userId,\n                                    status: \"ACTIVE\"\n                                },\n                                {\n                                    user2Id: userId,\n                                    status: \"ACTIVE\"\n                                }\n                            ]\n                        },\n                        include: {\n                            user1: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    username: true,\n                                    image: true,\n                                    email: true\n                                }\n                            },\n                            user2: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    username: true,\n                                    image: true,\n                                    email: true\n                                }\n                            },\n                            matches: {\n                                orderBy: {\n                                    date: \"desc\"\n                                },\n                                take: 5 // Les 5 derniers matchs\n                            }\n                        },\n                        orderBy: {\n                            updatedAt: \"desc\"\n                        }\n                    });\n                    console.log(`🏆 ${activeRivalries.length} rivalités actives trouvées`);\n                    // Formater les rivalités avec statistiques\n                    const formattedRivalries = activeRivalries.map((rivalry)=>{\n                        const isUser1 = rivalry.user1Id === userId;\n                        const friend = isUser1 ? rivalry.user2 : rivalry.user1;\n                        // Calculer les stats\n                        let myWins = 0, myLosses = 0, draws = 0;\n                        rivalry.matches.forEach((match)=>{\n                            const myScore = isUser1 ? match.user1Score : match.user2Score;\n                            const friendScore = isUser1 ? match.user2Score : match.user1Score;\n                            // Extraire les scores numériques (format libre mais on essaie)\n                            const myNumeric = parseInt(myScore.match(/\\d+/)?.[0] || \"0\");\n                            const friendNumeric = parseInt(friendScore.match(/\\d+/)?.[0] || \"0\");\n                            if (myNumeric > friendNumeric) myWins++;\n                            else if (friendNumeric > myNumeric) myLosses++;\n                            else draws++;\n                        });\n                        // Calculer la série actuelle\n                        let currentStreak = 0;\n                        let streakType = \"none\";\n                        if (rivalry.matches.length > 0) {\n                            const lastResult = rivalry.matches[0] // Le plus récent\n                            ;\n                            const myLastScore = isUser1 ? lastResult.user1Score : lastResult.user2Score;\n                            const friendLastScore = isUser1 ? lastResult.user2Score : lastResult.user1Score;\n                            const myLastNumeric = parseInt(myLastScore.match(/\\d+/)?.[0] || \"0\");\n                            const friendLastNumeric = parseInt(friendLastScore.match(/\\d+/)?.[0] || \"0\");\n                            if (myLastNumeric > friendLastNumeric) {\n                                streakType = \"wins\";\n                                // Compter les victoires consécutives\n                                for (const match of rivalry.matches){\n                                    const myScore = isUser1 ? match.user1Score : match.user2Score;\n                                    const friendScore = isUser1 ? match.user2Score : match.user1Score;\n                                    const myNum = parseInt(myScore.match(/\\d+/)?.[0] || \"0\");\n                                    const friendNum = parseInt(friendScore.match(/\\d+/)?.[0] || \"0\");\n                                    if (myNum > friendNum) currentStreak++;\n                                    else break;\n                                }\n                            } else if (friendLastNumeric > myLastNumeric) {\n                                streakType = \"losses\";\n                                // Compter les défaites consécutives\n                                for (const match of rivalry.matches){\n                                    const myScore = isUser1 ? match.user1Score : match.user2Score;\n                                    const friendScore = isUser1 ? match.user2Score : match.user1Score;\n                                    const myNum = parseInt(myScore.match(/\\d+/)?.[0] || \"0\");\n                                    const friendNum = parseInt(friendScore.match(/\\d+/)?.[0] || \"0\");\n                                    if (friendNum > myNum) currentStreak++;\n                                    else break;\n                                }\n                            }\n                        }\n                        return {\n                            id: rivalry.id,\n                            sport: rivalry.sport,\n                            status: rivalry.status,\n                            createdAt: rivalry.createdAt.toISOString(),\n                            friend: {\n                                id: friend.id,\n                                name: friend.name,\n                                username: friend.username,\n                                image: friend.image,\n                                email: friend.email\n                            },\n                            myStats: {\n                                wins: myWins,\n                                losses: myLosses,\n                                totalMatches: rivalry.matches.length,\n                                currentStreak,\n                                streakType\n                            },\n                            friendStats: {\n                                wins: myLosses,\n                                losses: myWins,\n                                totalMatches: rivalry.matches.length\n                            },\n                            recentMatches: rivalry.matches.map((match)=>({\n                                    id: match.id,\n                                    date: match.date.toISOString(),\n                                    myScore: isUser1 ? match.user1Score : match.user2Score,\n                                    friendScore: isUser1 ? match.user2Score : match.user1Score,\n                                    location: match.location,\n                                    comment: match.comment,\n                                    addedBy: match.addedBy,\n                                    winner: (()=>{\n                                        const myScore = isUser1 ? match.user1Score : match.user2Score;\n                                        const friendScore = isUser1 ? match.user2Score : match.user1Score;\n                                        const myNum = parseInt(myScore.match(/\\d+/)?.[0] || \"0\");\n                                        const friendNum = parseInt(friendScore.match(/\\d+/)?.[0] || \"0\");\n                                        if (myNum > friendNum) return \"me\";\n                                        if (friendNum > myNum) return \"friend\";\n                                        return \"draw\";\n                                    })()\n                                }))\n                        };\n                    });\n                    return res.status(200).json({\n                        rivalries: formattedRivalries\n                    });\n                }\n            case \"POST\":\n                console.log(\"➕ POST nouvelle rivalit\\xe9\");\n                console.log(\"Body re\\xe7u:\", req.body);\n                const { friendId, sport, message } = req.body;\n                // Validation\n                if (!friendId || !sport) {\n                    console.log(\"❌ Validation \\xe9chou\\xe9e\");\n                    return res.status(400).json({\n                        message: \"friendId et sport sont requis\"\n                    });\n                }\n                if (friendId === userId) {\n                    console.log(\"❌ Tentative rivalit\\xe9 avec soi-m\\xeame\");\n                    return res.status(400).json({\n                        message: \"Vous ne pouvez pas cr\\xe9er une rivalit\\xe9 avec vous-m\\xeame\"\n                    });\n                }\n                // Vérifier que l'ami existe\n                const friend = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findUnique({\n                    where: {\n                        id: friendId\n                    },\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true\n                    }\n                });\n                if (!friend) {\n                    console.log(\"❌ Ami non trouv\\xe9 avec ID:\", friendId);\n                    return res.status(404).json({\n                        message: \"Ami non trouv\\xe9\"\n                    });\n                }\n                console.log(\"\\uD83D\\uDC6B Ami trouv\\xe9:\", friend.name, \"(\" + friend.email + \")\");\n                // Vérifier qu'ils sont amis\n                const friendship = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.friendship.findFirst({\n                    where: {\n                        OR: [\n                            {\n                                senderId: userId,\n                                receiverId: friendId,\n                                status: \"ACCEPTED\"\n                            },\n                            {\n                                receiverId: userId,\n                                senderId: friendId,\n                                status: \"ACCEPTED\"\n                            }\n                        ]\n                    }\n                });\n                if (!friendship) {\n                    console.log(\"❌ Pas d'amiti\\xe9 trouv\\xe9e entre\", user.name, \"et\", friend.name);\n                    return res.status(403).json({\n                        message: \"Vous devez \\xeatre amis pour cr\\xe9er une rivalit\\xe9\"\n                    });\n                }\n                console.log(\"✅ Amiti\\xe9 confirm\\xe9e\");\n                // Vérifier qu'une rivalité n'existe pas déjà\n                const existingRivalry = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.personalRivalry.findFirst({\n                    where: {\n                        OR: [\n                            {\n                                user1Id: userId,\n                                user2Id: friendId,\n                                sport\n                            },\n                            {\n                                user1Id: friendId,\n                                user2Id: userId,\n                                sport\n                            }\n                        ]\n                    }\n                });\n                if (existingRivalry) {\n                    console.log(\"❌ Rivalit\\xe9 d\\xe9j\\xe0 existante:\", existingRivalry.id);\n                    return res.status(400).json({\n                        message: `Une rivalité en ${sport} existe déjà avec cet ami`,\n                        existingRivalry: {\n                            id: existingRivalry.id,\n                            status: existingRivalry.status\n                        }\n                    });\n                }\n                // 🎯 CRÉER LA RIVALITÉ\n                const rivalry = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.personalRivalry.create({\n                    data: {\n                        user1Id: userId,\n                        user2Id: friendId,\n                        sport,\n                        message,\n                        createdBy: userId,\n                        status: \"PENDING\"\n                    },\n                    include: {\n                        user1: {\n                            select: {\n                                id: true,\n                                name: true,\n                                username: true,\n                                image: true\n                            }\n                        },\n                        user2: {\n                            select: {\n                                id: true,\n                                name: true,\n                                username: true,\n                                image: true\n                            }\n                        }\n                    }\n                });\n                console.log(\"\\uD83C\\uDF89 RIVALIT\\xc9 CR\\xc9\\xc9E EN DB:\", rivalry.id);\n                // 🔔 ENVOYER LA NOTIFICATION\n                try {\n                    await notifyRivalryRequest(userId, friendId, user.name || \"Un ami\", sport, rivalry.id);\n                    console.log(\"✅ Notification envoy\\xe9e \\xe0\", friend.name);\n                } catch (error) {\n                    console.error(\"❌ Erreur notification:\", error);\n                // On continue même si la notification échoue\n                }\n                return res.status(201).json({\n                    message: \"Demande de rivalit\\xe9 envoy\\xe9e avec succ\\xe8s\",\n                    rivalry: {\n                        id: rivalry.id,\n                        sport: rivalry.sport,\n                        status: rivalry.status,\n                        friend: {\n                            id: rivalry.user2.id,\n                            name: rivalry.user2.name,\n                            username: rivalry.user2.username,\n                            image: rivalry.user2.image\n                        },\n                        isCreator: true,\n                        message: rivalry.message,\n                        createdAt: rivalry.createdAt\n                    }\n                });\n            case \"PUT\":\n                // 🎯 ACCEPTER/REFUSER UNE DEMANDE DE RIVALITÉ\n                console.log(\"✅ PUT - Accepter/Refuser rivalit\\xe9\");\n                const { rivalryId, action } = req.body;\n                if (!rivalryId || !action) {\n                    return res.status(400).json({\n                        message: \"rivalryId et action sont requis\"\n                    });\n                }\n                const targetRivalry = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.personalRivalry.findFirst({\n                    where: {\n                        id: rivalryId,\n                        user2Id: userId,\n                        status: \"PENDING\"\n                    },\n                    include: {\n                        user1: {\n                            select: {\n                                id: true,\n                                name: true\n                            }\n                        }\n                    }\n                });\n                if (!targetRivalry) {\n                    return res.status(404).json({\n                        message: \"Demande de rivalit\\xe9 non trouv\\xe9e\"\n                    });\n                }\n                if (action === \"accept\") {\n                    // Accepter la rivalité\n                    const updatedRivalry = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.personalRivalry.update({\n                        where: {\n                            id: rivalryId\n                        },\n                        data: {\n                            status: \"ACTIVE\"\n                        }\n                    });\n                    // TODO: Envoyer notification d'acceptation au créateur\n                    console.log(`✅ Rivalité acceptée par ${user.name}`);\n                    return res.status(200).json({\n                        message: \"Rivalit\\xe9 accept\\xe9e !\",\n                        rivalry: updatedRivalry\n                    });\n                } else if (action === \"decline\") {\n                    // Refuser et supprimer la rivalité\n                    await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.personalRivalry.delete({\n                        where: {\n                            id: rivalryId\n                        }\n                    });\n                    console.log(`❌ Rivalité refusée par ${user.name}`);\n                    return res.status(200).json({\n                        message: \"Rivalit\\xe9 refus\\xe9e\"\n                    });\n                } else {\n                    return res.status(400).json({\n                        message: \"Action invalide\"\n                    });\n                }\n            default:\n                return res.status(405).json({\n                    message: \"M\\xe9thode non autoris\\xe9e\"\n                });\n        }\n    } catch (error) {\n        console.error(\"\\uD83D\\uDCA5 ERREUR SERVEUR:\", error);\n        return res.status(500).json({\n            message: \"Erreur serveur\",\n            error: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/personal-rivalries/index.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpersonal-rivalries&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fpersonal-rivalries%2Findex.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();