"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/notifications";
exports.ids = ["pages/api/notifications"];
exports.modules = {

/***/ "@next-auth/prisma-adapter":
/*!********************************************!*\
  !*** external "@next-auth/prisma-adapter" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/prisma-adapter");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/providers/github":
/*!*********************************************!*\
  !*** external "next-auth/providers/github" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/github");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnotifications&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fnotifications.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnotifications&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fnotifications.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_notifications_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/notifications.ts */ \"(api)/./pages/api/notifications.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_notifications_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_notifications_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/notifications\",\n        pathname: \"/api/notifications\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_notifications_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm5vdGlmaWNhdGlvbnMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRm5vdGlmaWNhdGlvbnMudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDeUQ7QUFDekQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHdEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx3REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mb290cmF0ZS8/YmUyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL25vdGlmaWNhdGlvbnMudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9ub3RpZmljYXRpb25zXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbm90aWZpY2F0aW9uc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnotifications&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fnotifications.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @next-auth/prisma-adapter */ \"@next-auth/prisma-adapter\");\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/github */ \"next-auth/providers/github\");\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n\n\n\n\n\nconst authOptions = {\n    adapter: (0,_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__.PrismaAdapter)(_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma),\n    providers: [\n        next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.GITHUB_ID,\n            clientSecret: process.env.GITHUB_SECRET\n        }),\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default()({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Mot de passe\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const user = await _prisma__WEBPACK_IMPORTED_MODULE_4__.prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user || !user.password) {\n                    return null;\n                }\n                const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_3___default().compare(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.name,\n                    username: user.username\n                };\n            }\n        })\n    ],\n    callbacks: {\n        session: async ({ session, token })=>{\n            if (session?.user) {\n                session.user.id = token.sub;\n            }\n            return session;\n        },\n        jwt: async ({ user, token })=>{\n            if (user) {\n                token.uid = user.id;\n            }\n            return token;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    pages: {\n        signIn: \"/auth/signin\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ3lEO0FBQ0Y7QUFDVTtBQUNwQztBQUNJO0FBRTFCLE1BQU1LLGNBQStCO0lBQzFDQyxTQUFTTix3RUFBYUEsQ0FBQ0ksMkNBQU1BO0lBQzdCRyxXQUFXO1FBQ1ROLGlFQUFjQSxDQUFDO1lBQ2JPLFVBQVVDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztZQUMvQkMsY0FBY0gsUUFBUUMsR0FBRyxDQUFDRyxhQUFhO1FBQ3pDO1FBQ0FYLHNFQUFtQkEsQ0FBQztZQUNsQlksTUFBTTtZQUNOQyxhQUFhO2dCQUNYQyxPQUFPO29CQUFFQyxPQUFPO29CQUFTQyxNQUFNO2dCQUFRO2dCQUN2Q0MsVUFBVTtvQkFBRUYsT0FBTztvQkFBZ0JDLE1BQU07Z0JBQVc7WUFDdEQ7WUFDQSxNQUFNRSxXQUFVTCxXQUFXO2dCQUN6QixJQUFJLENBQUNBLGFBQWFDLFNBQVMsQ0FBQ0QsYUFBYUksVUFBVTtvQkFDakQsT0FBTztnQkFDVDtnQkFFQSxNQUFNRSxPQUFPLE1BQU1qQiwyQ0FBTUEsQ0FBQ2lCLElBQUksQ0FBQ0MsVUFBVSxDQUFDO29CQUN4Q0MsT0FBTzt3QkFDTFAsT0FBT0QsWUFBWUMsS0FBSztvQkFDMUI7Z0JBQ0Y7Z0JBRUEsSUFBSSxDQUFDSyxRQUFRLENBQUNBLEtBQUtGLFFBQVEsRUFBRTtvQkFDM0IsT0FBTztnQkFDVDtnQkFFQSxNQUFNSyxrQkFBa0IsTUFBTXJCLHVEQUFjLENBQzFDWSxZQUFZSSxRQUFRLEVBQ3BCRSxLQUFLRixRQUFRO2dCQUdmLElBQUksQ0FBQ0ssaUJBQWlCO29CQUNwQixPQUFPO2dCQUNUO2dCQUVBLE9BQU87b0JBQ0xFLElBQUlMLEtBQUtLLEVBQUU7b0JBQ1hWLE9BQU9LLEtBQUtMLEtBQUs7b0JBQ2pCRixNQUFNTyxLQUFLUCxJQUFJO29CQUNmYSxVQUFVTixLQUFLTSxRQUFRO2dCQUN6QjtZQUNGO1FBQ0Y7S0FDRDtJQUNEQyxXQUFXO1FBQ1RDLFNBQVMsT0FBTyxFQUFFQSxPQUFPLEVBQUVDLEtBQUssRUFBRTtZQUNoQyxJQUFJRCxTQUFTUixNQUFNO2dCQUNqQlEsUUFBUVIsSUFBSSxDQUFDSyxFQUFFLEdBQUdJLE1BQU1DLEdBQUc7WUFDN0I7WUFDQSxPQUFPRjtRQUNUO1FBQ0FHLEtBQUssT0FBTyxFQUFFWCxJQUFJLEVBQUVTLEtBQUssRUFBRTtZQUN6QixJQUFJVCxNQUFNO2dCQUNSUyxNQUFNRyxHQUFHLEdBQUdaLEtBQUtLLEVBQUU7WUFDckI7WUFDQSxPQUFPSTtRQUNUO0lBQ0Y7SUFDQUQsU0FBUztRQUNQSyxVQUFVO0lBQ1o7SUFDQUMsT0FBTztRQUNMQyxRQUFRO0lBQ1Y7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvLi9saWIvYXV0aC50cz9iZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBdXRoT3B0aW9ucyB9IGZyb20gXCJuZXh0LWF1dGhcIlxuaW1wb3J0IHsgUHJpc21hQWRhcHRlciB9IGZyb20gXCJAbmV4dC1hdXRoL3ByaXNtYS1hZGFwdGVyXCJcbmltcG9ydCBHaXRodWJQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9naXRodWJcIlxuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIlxuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIlxuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIi4vcHJpc21hXCJcblxuZXhwb3J0IGNvbnN0IGF1dGhPcHRpb25zOiBOZXh0QXV0aE9wdGlvbnMgPSB7XG4gIGFkYXB0ZXI6IFByaXNtYUFkYXB0ZXIocHJpc21hKSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgR2l0aHViUHJvdmlkZXIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkdJVEhVQl9JRCEsXG4gICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdJVEhVQl9TRUNSRVQhLFxuICAgIH0pLFxuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6IFwiRW1haWxcIiwgdHlwZTogXCJlbWFpbFwiIH0sXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIk1vdCBkZSBwYXNzZVwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgZW1haWw6IGNyZWRlbnRpYWxzLmVtYWlsXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmICghdXNlciB8fCAhdXNlci5wYXNzd29yZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpc1Bhc3N3b3JkVmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShcbiAgICAgICAgICBjcmVkZW50aWFscy5wYXNzd29yZCxcbiAgICAgICAgICB1c2VyLnBhc3N3b3JkXG4gICAgICAgIClcblxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiB1c2VyLmlkLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSxcbiAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIHNlc3Npb246IGFzeW5jICh7IHNlc3Npb24sIHRva2VuIH0pID0+IHtcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIHNlc3Npb24udXNlci5pZCA9IHRva2VuLnN1YiFcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uXG4gICAgfSxcbiAgICBqd3Q6IGFzeW5jICh7IHVzZXIsIHRva2VuIH0pID0+IHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLnVpZCA9IHVzZXIuaWRcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlblxuICAgIH0sXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gIH0sXG4gIHBhZ2VzOiB7XG4gICAgc2lnbkluOiAnL2F1dGgvc2lnbmluJyxcbiAgfSxcbn1cbiJdLCJuYW1lcyI6WyJQcmlzbWFBZGFwdGVyIiwiR2l0aHViUHJvdmlkZXIiLCJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiYmNyeXB0IiwicHJpc21hIiwiYXV0aE9wdGlvbnMiLCJhZGFwdGVyIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiR0lUSFVCX0lEIiwiY2xpZW50U2VjcmV0IiwiR0lUSFVCX1NFQ1JFVCIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaXNQYXNzd29yZFZhbGlkIiwiY29tcGFyZSIsImlkIiwidXNlcm5hbWUiLCJjYWxsYmFja3MiLCJzZXNzaW9uIiwidG9rZW4iLCJzdWIiLCJqd3QiLCJ1aWQiLCJzdHJhdGVneSIsInBhZ2VzIiwic2lnbkluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/auth.ts\n");

/***/ }),

/***/ "(api)/./lib/notifications.ts":
/*!******************************!*\
  !*** ./lib/notifications.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAndNotifyTrendingMatch: () => (/* binding */ checkAndNotifyTrendingMatch),\n/* harmony export */   createNotification: () => (/* binding */ createNotification),\n/* harmony export */   deleteNotification: () => (/* binding */ deleteNotification),\n/* harmony export */   getUnreadNotificationsCount: () => (/* binding */ getUnreadNotificationsCount),\n/* harmony export */   getUserNotifications: () => (/* binding */ getUserNotifications),\n/* harmony export */   markAllNotificationsAsRead: () => (/* binding */ markAllNotificationsAsRead),\n/* harmony export */   markNotificationAsRead: () => (/* binding */ markNotificationAsRead),\n/* harmony export */   notifyFriendActivity: () => (/* binding */ notifyFriendActivity),\n/* harmony export */   notifyFriendRequest: () => (/* binding */ notifyFriendRequest),\n/* harmony export */   notifyTeamMatchAdded: () => (/* binding */ notifyTeamMatchAdded)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n// lib/notifications.ts - Système de notifications centralisé\n\n// 🔔 CRÉER UNE NOTIFICATION\nasync function createNotification({ userId, type, title, message, actionUrl, data }) {\n    try {\n        const notification = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.notification.create({\n            data: {\n                userId,\n                type,\n                title,\n                message,\n                data: data ? JSON.stringify(data) : null,\n                read: false\n            }\n        });\n        console.log(`✅ Notification créée pour ${userId}: ${title}`);\n        return notification;\n    } catch (error) {\n        console.error(\"❌ Erreur cr\\xe9ation notification:\", error);\n        return null;\n    }\n}\n// 🎯 NOTIFICATION DEMANDE D'AMI (FACILE)\nasync function notifyFriendRequest(senderId, receiverId, senderName) {\n    return createNotification({\n        userId: receiverId,\n        type: \"friend_request\",\n        title: \"Nouvelle demande d'ami\",\n        message: `${senderName} veut être votre ami`,\n        actionUrl: \"/friends\",\n        data: {\n            senderId,\n            senderName\n        }\n    });\n}\n// ⭐ NOTIFICATION ACTIVITÉ AMI (MOYEN)\nasync function notifyFriendActivity(userId, friendName, matchName, rating, matchId, hasComment = false) {\n    try {\n        // Récupérer tous les amis de l'utilisateur actif\n        const friendships = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.friendship.findMany({\n            where: {\n                OR: [\n                    {\n                        senderId: userId,\n                        status: \"ACCEPTED\"\n                    },\n                    {\n                        receiverId: userId,\n                        status: \"ACCEPTED\"\n                    }\n                ]\n            }\n        });\n        // Notifier chaque ami\n        for (const friendship of friendships){\n            const friendId = friendship.senderId === userId ? friendship.receiverId : friendship.senderId;\n            const action = hasComment ? \"a comment\\xe9\" : \"a not\\xe9\";\n            const ratingText = hasComment ? `(${rating}⭐)` : `${rating}⭐`;\n            await createNotification({\n                userId: friendId,\n                type: \"friend_activity\",\n                title: \"Activit\\xe9 d'un ami\",\n                message: `${friendName} ${action} ${matchName} ${ratingText}`,\n                actionUrl: `/match/${matchId}`,\n                data: {\n                    friendId: userId,\n                    friendName,\n                    matchName,\n                    rating,\n                    matchId,\n                    hasComment\n                }\n            });\n        }\n        console.log(`👥 ${friendships.length} amis notifiés pour l'activité de ${friendName}`);\n    } catch (error) {\n        console.error(\"❌ Erreur notification ami:\", error);\n    }\n}\n// 🔥 NOTIFICATION MATCH POPULAIRE (MOYEN-DIFFICILE)\nasync function checkAndNotifyTrendingMatch(matchId) {\n    try {\n        // Récupérer les stats du match\n        const match = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.findUnique({\n            where: {\n                id: matchId\n            },\n            select: {\n                id: true,\n                homeTeam: true,\n                awayTeam: true,\n                totalRatings: true,\n                createdAt: true,\n                date: true,\n                competition: true\n            }\n        });\n        if (!match) return;\n        const matchName = `${match.homeTeam} vs ${match.awayTeam}`;\n        const ratingsCount = match.totalRatings;\n        // 🎯 LOGIQUE TRENDING : \n        // - Minimum 15 notes pour être trending\n        // - Match récent (moins de 7 jours depuis sa date de création dans la DB)\n        // - Pas déjà notifié pour ce match (éviter spam)\n        const isRecent = Date.now() - new Date(match.createdAt).getTime() < 7 * 24 * 60 * 60 * 1000;\n        const isTrending = ratingsCount >= 15 && isRecent;\n        if (!isTrending) return;\n        // Vérifier qu'on n'a pas déjà notifié pour ce match\n        const existingNotif = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.notification.findFirst({\n            where: {\n                type: \"trending_match\",\n                data: {\n                    contains: `\"matchId\":\"${matchId}\"`\n                }\n            }\n        });\n        if (existingNotif) return; // Déjà notifié\n        // Notifier tous les utilisateurs actifs récents (pas tous pour éviter le spam)\n        const activeUsers = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findMany({\n            where: {\n                ratings: {\n                    some: {\n                        createdAt: {\n                            gte: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000) // Actifs dans les 14 derniers jours\n                        }\n                    }\n                }\n            },\n            select: {\n                id: true\n            },\n            take: 50 // Limiter à 50 utilisateurs max\n        });\n        const notificationPromises = activeUsers.map((user)=>createNotification({\n                userId: user.id,\n                type: \"trending_match\",\n                title: \"Match tendance \\uD83D\\uDD25\",\n                message: `${matchName} devient viral ! (${ratingsCount} avis)`,\n                actionUrl: `/match/${matchId}`,\n                data: {\n                    matchId,\n                    matchName,\n                    ratingsCount,\n                    competition: match.competition\n                }\n            }));\n        await Promise.all(notificationPromises);\n        console.log(`🔥 Match trending notifié: ${matchName} (${ratingsCount} notes) → ${activeUsers.length} utilisateurs`);\n    } catch (error) {\n        console.error(\"❌ Erreur notification trending:\", error);\n    }\n}\n// 🏟️ NOTIFICATION MATCH ÉQUIPE SUIVIE (DIFFICILE)\nasync function notifyTeamMatchAdded(match) {\n    try {\n        console.log(`🏟️ Vérification notifications équipes pour: ${match.homeTeam} vs ${match.awayTeam}`);\n        // Rechercher les utilisateurs qui suivent l'équipe à domicile\n        const homeTeamFollows = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.$queryRaw`\n      SELECT DISTINCT tf.user_id, u.name as user_name, t.name as team_name\n      FROM team_follows tf\n      JOIN teams t ON tf.team_id = t.id  \n      JOIN users u ON tf.user_id = u.id\n      WHERE LOWER(t.name) LIKE LOWER(${`%${match.homeTeam}%`})\n         OR LOWER(${match.homeTeam.toLowerCase()}) LIKE LOWER(CONCAT('%', t.name, '%'))\n    `;\n        // Rechercher les utilisateurs qui suivent l'équipe à l'extérieur\n        const awayTeamFollows = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.$queryRaw`\n      SELECT DISTINCT tf.user_id, u.name as user_name, t.name as team_name  \n      FROM team_follows tf\n      JOIN teams t ON tf.team_id = t.id\n      JOIN users u ON tf.user_id = u.id  \n      WHERE LOWER(t.name) LIKE LOWER(${`%${match.awayTeam}%`})\n         OR LOWER(${match.awayTeam.toLowerCase()}) LIKE LOWER(CONCAT('%', t.name, '%'))\n    `;\n        const allFollows = [\n            ...homeTeamFollows,\n            ...awayTeamFollows\n        ];\n        const uniqueUsers = new Map();\n        // Dédupliquer les utilisateurs\n        allFollows.forEach((follow)=>{\n            if (!uniqueUsers.has(follow.user_id)) {\n                uniqueUsers.set(follow.user_id, {\n                    userId: follow.user_id,\n                    userName: follow.user_name,\n                    teamName: follow.team_name\n                });\n            }\n        });\n        // Notifier chaque utilisateur\n        const notificationPromises = Array.from(uniqueUsers.values()).map((userData)=>createNotification({\n                userId: userData.userId,\n                type: \"team_match\",\n                title: `Nouveau match de ${userData.teamName} !`,\n                message: `${match.homeTeam} vs ${match.awayTeam} - ${new Date(match.date).toLocaleDateString(\"fr-FR\")}`,\n                actionUrl: `/match/${match.id}`,\n                data: {\n                    matchId: match.id,\n                    homeTeam: match.homeTeam,\n                    awayTeam: match.awayTeam,\n                    followedTeam: userData.teamName,\n                    competition: match.competition\n                }\n            }));\n        await Promise.all(notificationPromises);\n        console.log(`🏟️ ${uniqueUsers.size} utilisateurs notifiés pour ${match.homeTeam} vs ${match.awayTeam}`);\n    } catch (error) {\n        console.error(\"❌ Erreur notification \\xe9quipe:\", error);\n    }\n}\n// 📱 HELPERS POUR L'API\nasync function getUserNotifications(userId, limit = 20) {\n    try {\n        const notifications = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.notification.findMany({\n            where: {\n                userId\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            },\n            take: limit\n        });\n        // Parser les données JSON\n        return notifications.map((notif)=>({\n                ...notif,\n                data: notif.data ? JSON.parse(notif.data) : null\n            }));\n    } catch (error) {\n        console.error(\"❌ Erreur r\\xe9cup\\xe9ration notifications:\", error);\n        return [];\n    }\n}\nasync function getUnreadNotificationsCount(userId) {\n    try {\n        return await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.notification.count({\n            where: {\n                userId,\n                read: false\n            }\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur count notifications:\", error);\n        return 0;\n    }\n}\nasync function markNotificationAsRead(notificationId, userId) {\n    try {\n        return await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.notification.update({\n            where: {\n                id: notificationId,\n                userId\n            },\n            data: {\n                read: true\n            }\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur mark as read:\", error);\n        return null;\n    }\n}\nasync function markAllNotificationsAsRead(userId) {\n    try {\n        return await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.notification.updateMany({\n            where: {\n                userId,\n                read: false\n            },\n            data: {\n                read: true\n            }\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur mark all as read:\", error);\n        return null;\n    }\n}\nasync function deleteNotification(notificationId, userId) {\n    try {\n        return await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.notification.delete({\n            where: {\n                id: notificationId,\n                userId\n            }\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur delete notification:\", error);\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/notifications.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXlCLEVBQWNILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./pages/api/notifications.ts":
/*!************************************!*\
  !*** ./pages/api/notifications.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/auth */ \"(api)/./lib/auth.ts\");\n/* harmony import */ var _lib_notifications__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/notifications */ \"(api)/./lib/notifications.ts\");\n\n\n\nasync function handler(req, res) {\n    const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions);\n    if (!session?.user?.id) {\n        return res.status(401).json({\n            error: \"Non connect\\xe9\"\n        });\n    }\n    if (req.method === \"GET\") {\n        try {\n            const { limit = \"20\", unread_count = \"false\" } = req.query;\n            // Si on veut juste le count des non lues\n            if (unread_count === \"true\") {\n                const count = await (0,_lib_notifications__WEBPACK_IMPORTED_MODULE_2__.getUnreadNotificationsCount)(session.user.id);\n                return res.status(200).json({\n                    unreadCount: count\n                });\n            }\n            // Récupérer les notifications\n            const notifications = await (0,_lib_notifications__WEBPACK_IMPORTED_MODULE_2__.getUserNotifications)(session.user.id, parseInt(limit));\n            // Formater les dates pour le frontend\n            const formattedNotifications = notifications.map((notif)=>({\n                    ...notif,\n                    date: notif.createdAt,\n                    actionUrl: getActionUrlFromNotification(notif)\n                }));\n            res.status(200).json({\n                notifications: formattedNotifications,\n                total: notifications.length\n            });\n        } catch (error) {\n            console.error(\"Erreur r\\xe9cup\\xe9ration notifications:\", error);\n            res.status(500).json({\n                error: \"Erreur serveur\"\n            });\n        }\n    } else if (req.method === \"PUT\") {\n        try {\n            const { notificationId, markAllRead } = req.body;\n            if (markAllRead) {\n                // Marquer toutes les notifications comme lues\n                await (0,_lib_notifications__WEBPACK_IMPORTED_MODULE_2__.markAllNotificationsAsRead)(session.user.id);\n                console.log(`✅ Toutes les notifications marquées comme lues pour ${session.user.name}`);\n                return res.status(200).json({\n                    success: true,\n                    message: \"Toutes les notifications marqu\\xe9es comme lues\"\n                });\n            } else if (notificationId) {\n                // Marquer une notification spécifique comme lue\n                const result = await (0,_lib_notifications__WEBPACK_IMPORTED_MODULE_2__.markNotificationAsRead)(notificationId, session.user.id);\n                if (result) {\n                    console.log(`✅ Notification ${notificationId} marquée comme lue`);\n                    return res.status(200).json({\n                        success: true,\n                        message: \"Notification marqu\\xe9e comme lue\"\n                    });\n                } else {\n                    return res.status(404).json({\n                        error: \"Notification non trouv\\xe9e\"\n                    });\n                }\n            } else {\n                return res.status(400).json({\n                    error: \"Donn\\xe9es invalides\"\n                });\n            }\n        } catch (error) {\n            console.error(\"Erreur mise \\xe0 jour notification:\", error);\n            res.status(500).json({\n                error: \"Erreur serveur\"\n            });\n        }\n    } else if (req.method === \"DELETE\") {\n        try {\n            const { notificationId } = req.body;\n            if (!notificationId) {\n                return res.status(400).json({\n                    error: \"ID notification requis\"\n                });\n            }\n            const result = await (0,_lib_notifications__WEBPACK_IMPORTED_MODULE_2__.deleteNotification)(notificationId, session.user.id);\n            if (result) {\n                console.log(`🗑️ Notification ${notificationId} supprimée`);\n                res.status(200).json({\n                    success: true,\n                    message: \"Notification supprim\\xe9e\"\n                });\n            } else {\n                res.status(404).json({\n                    error: \"Notification non trouv\\xe9e\"\n                });\n            }\n        } catch (error) {\n            console.error(\"Erreur suppression notification:\", error);\n            res.status(500).json({\n                error: \"Erreur serveur\"\n            });\n        }\n    } else {\n        res.setHeader(\"Allow\", [\n            \"GET\",\n            \"PUT\",\n            \"DELETE\"\n        ]);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}\n// Helper pour générer l'URL d'action en fonction du type de notification\nfunction getActionUrlFromNotification(notification) {\n    const data = notification.data;\n    switch(notification.type){\n        case \"friend_request\":\n            return \"/friends\";\n        case \"friend_activity\":\n            return data?.matchId ? `/match/${data.matchId}` : \"/friends\";\n        case \"trending_match\":\n            return data?.matchId ? `/match/${data.matchId}` : \"/\";\n        case \"team_match\":\n            return data?.matchId ? `/match/${data.matchId}` : \"/\";\n        default:\n            return \"/\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/notifications.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnotifications&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fnotifications.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();